From f27a89f6afa226a92f5e241f5c4fef98f872b4af Mon Sep 17 00:00:00 2001
From: Janne Grunau <j@jannau.net>
Date: Wed, 10 Jan 2024 23:18:52 +0100
Subject: [PATCH] video: Convert UTF-8 input stream to the 437 code page

The bitmap fonts (VGA 8x16 and friends) we import from Linux use the
437 code page to map their glyphs. For U-Boot's own purposes this is
probably fine, but UEFI applications output Unicode, which only matches
in the very basic first 127 characters.

Use utf8_to_cp437_stream() to convert UTF-8 character sequences into the
respective CP437 code point, as far as the characters defined in there
allow this. This includes quite some international and box drawing
characters, which are used by UEFI applications.

Link: https://lore.kernel.org/u-boot/20220110005638.21599-9-andre.przywara@arm.com/
Based-on-work-by: Andre Przywara <andre.przywara@arm.com>
Signed-off-by: Janne Grunau <j@jannau.net>
---
 drivers/video/vidconsole-uclass.c | 6 ++++++
 include/video_console.h           | 4 ++++
 2 files changed, 10 insertions(+)

diff --git a/drivers/video/vidconsole-uclass.c b/drivers/video/vidconsole-uclass.c
index 22d55df71f6..577ca5f66e2 100644
--- a/drivers/video/vidconsole-uclass.c
+++ b/drivers/video/vidconsole-uclass.c
@@ -11,6 +11,7 @@
 
 #include <common.h>
 #include <abuf.h>
+#include <charset.h>
 #include <command.h>
 #include <console.h>
 #include <log.h>
@@ -489,6 +490,11 @@ int vidconsole_put_char(struct udevice *dev, char ch)
 		priv->last_ch = 0;
 		break;
 	default:
+#ifdef CONFIG_EFI_LOADER
+		ch = utf8_to_cp437_stream(ch, priv->utf8_cp437_buf);
+		if (ch == 0)
+			return 0;
+#endif
 		ret = vidconsole_output_glyph(dev, ch);
 		if (ret < 0)
 			return ret;
diff --git a/include/video_console.h b/include/video_console.h
index bde67fa9a5a..cea42e75581 100644
--- a/include/video_console.h
+++ b/include/video_console.h
@@ -43,6 +43,7 @@ enum {
  * @col_saved:		Saved X position, in fractional units (VID_TO_POS(x))
  * @row_saved:		Saved Y position in pixels (0=top)
  * @escape_buf:		Buffer to accumulate escape sequence
+ * @utf8_cp437_buf:	Buffer to accumulate UTF-8 byte sequence
  */
 struct vidconsole_priv {
 	struct stdio_dev sdev;
@@ -66,6 +67,9 @@ struct vidconsole_priv {
 	int row_saved;
 	int col_saved;
 	char escape_buf[32];
+#ifdef CONFIG_EFI_LOADER
+	char utf8_cp437_buf[8];
+#endif
 };
 
 /**
